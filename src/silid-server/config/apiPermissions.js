/**
 * 2020-3-30
 *
 * These are the permissions used by the Auth0 Management API
 */
module.exports = {
  // Blacklist
  blacklist: {
    tokens: 'blacklist:tokens'
  },
  // Create
  create: {
    clientGrants: 'create:client_grants',
    clientKeys: 'create:client_keys',
    clients: 'create:clients',
    connections: 'create:connections',
    customDomains: 'create:custom_domains',
    deviceCredentials: 'create:device_credentials',
    emailProvider: 'create:email_provider',
    emailTemplates: 'create:email_templates',
    hooks: 'create:hooks',
    logStreams: 'create:log_streams',
    resourceServers: 'create:resource_servers',
    roles: 'create:roles',
    rules: 'create:rules',
    shields: 'create:shields',
    signingKeys: 'create:signing_keys',
    users: 'create:users',
    usersAppMetadata: 'create:users_app_metadata',
    userCustomBlocks: 'create:user_custom_blocks',
    userTickets: 'create:user_tickets',
  },
  // Read
  read: {
    anomalyBlocks: 'read:anomaly_blocks',
    branding: 'read:branding',
    clientGrants: 'read:client_grants',
    clientKeys: 'read:client_keys',
    clients: 'read:clients',
    connections: 'read:connections',
    customDomains: 'read:custom_domains',
    deviceCredentials: 'read:device_credentials',
    emailProvider: 'read:email_provider',
    emailTemplates: 'read:email_templates',
    grants: 'read:grants',
    guardianFactors: 'read:guardian_factors',
    guardianEnrollments: 'update:guardian_enrollments',
    guardianEnrollmentTickets: 'create:guardian_enrollment_tickets',
    hooks: 'read:hooks',
    logStreams: 'read:log_streams',
    logs: 'read:logs',
    mfaPolicies: 'read:mfa_policies',
    passwordsCheckingJob: 'create:passwords_checking_job',
    prompts: 'read:prompts',
    resourceServers: 'read:resource_servers',
    roles: 'read:roles',
    rules: 'read:rules',
    rulesConfigs: 'read:rules_configs',
    shields: 'read:shields',
    signingKeys: 'read:signing_keys',
    stats: 'read:stats',
    tennantSettings: 'read:tennant_settings',
    triggers: 'read:triggers',
    users: 'read:users',
    usersAppMetadata: 'read:users_app_metadata',
    userCustomBlocks: 'read:user_custom_blocks',
    userIdpTokents: 'read:user_idp_tokens',
  },
  // Update
  update: {
    branding: 'update:branding',
    clientGrants: 'update:client_grants',
    clientKeys: 'update:client_keys',
    clients: 'update:clients',
    connections: 'update:connections',
    deviceCredentials: 'update:device_credentials',
    emailProvider: 'update:email_provider',
    emailTemplates: 'update:email_templates',
    guardianFactors: 'update:guardian_factors',
    hooks: 'update:hooks',
    logStreams: 'update:log_streams',
    mfaPolicies: 'update:mfa_policies',
    prompts: 'update:prompts',
    resourceServers: 'update:resource_servers',
    roles: 'update:roles',
    roles: 'update:roles',
    rules: 'update:rules',
    rulesConfigs: 'update:rules_configs',
    signingKeys: 'update:signing_keys',
    tennantSettings: 'update:tennant_settings',
    triggers: 'update:triggers',
    users: 'update:users',
    usersAppMetadata: 'update:users_app_metadata',
  },
  // Delete
  'delete': {
    anomalyBlocks: 'delete:anomaly_blocks',
    clientGrants: 'delete:client_grants',
    clientKeys: 'delete:client_keys',
    clients: 'delete:clients',
    connections: 'delete:connections',
    customDomains: 'delete:custom_domains',
    deviceCredentials: 'delete:device_credentials',
    emailProvider: 'delete:email_provider',
    grants: 'delete:grants',
    guardianEnrollments: 'delete:guardian_enrollments',
    hooks: 'delete:hooks',
    logStreams: 'delete:log_streams',
    passwordsCheckingJob: 'delete:passwords_checking_job',
    resourceServers: 'delete:resource_servers',
    roles: 'delete:roles',
    rules: 'delete:rules',
    rulesConfigs: 'delete:rules_configs',
    shields: 'delete:shields',
    users: 'delete:users',
    usersAppMetadata: 'delete:users_app_metadata',
    userCustomBlocks: 'delete:user_custom_blocks',
  }
}
