#### docker-compose.yml
# all containers required for cypress tests
#
# TODO:
#   * add more documentation and use-case details
#   * consider how to coalesce DB service ENV vars with other services
#   * see if it makes sense to connect cypress test container here
#
version: "3"
services:
  # silid server app serving the primary UI
  app:
    depends_on:
      - postgres
    build: ./silid-server
    network_mode: host
    command: npm run dev
    volumes:
      - ./silid-server:/app/
      - app-node_modules:/app/node_modules
      - app-build:/app/build
    environment:
      - NODE_ENV=dev
      - PORT=3001
      # vv--[.env.development]--vv
      - AUTH0_AUDIENCE=https://id.languagetechnology.org/
      - SERVER_DOMAIN=http://localhost:3001
      - CLIENT_DOMAIN=http://localhost:3000
      - CALLBACK_URL=http://localhost:3001/callback
      - ROOT_AGENT=root@example.com
      - DATABASE_URL='postgres://user:pass@localhost:5432/postgres'

  # client build server
  client:
    depends_on:
      - app
    build: ./identity-react
    network_mode: host
    # client app sends a premature exit status; PM2 watcher added for workaround this
    command: ["pm2-runtime", "start", "./node_modules/react-scripts/scripts/start.js"]
    volumes:
      - ./identity-react:/srv/app/client/
      - client-node_modules:/srv/app/client/node_modules
      - client-build:/srv/app/client/build
    environment:
      # vv--[.env]--vv
      - REACT_APP_DOMAIN=silid.auth0.com
      - REACT_APP_CLIENT_ID=tjrl8aOQEx9AtQhFffuWmvP6bcHM7nXB
      - REACT_APP_CALLBACK_URL=https://example.com/callback

  # supporting data base for the application
  postgres:
    image: postgres:10.12
    network_mode: host
    volumes:
      - silid-postgres-data:/var/lib/postgresql/data
    # for now, need to make sure these ENV vars match ENV files (see top TODO)
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=pass
      - POSTGRES_DB=silid_development

volumes:
  app-node_modules:
  app-build:
  auth0-node_modules:
  client-node_modules:
  client-build:
  silid-postgres-data:
